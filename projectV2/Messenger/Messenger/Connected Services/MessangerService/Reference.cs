//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Messenger.MessangerService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginDTO", Namespace="http://schemas.datacontract.org/2004/07/MessangerDTO")]
    [System.SerializableAttribute()]
    public partial class LoginDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceDTO", Namespace="http://schemas.datacontract.org/2004/07/MessangerDTO")]
    [System.SerializableAttribute()]
    public partial class DeviceDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeviceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceIpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeviceId {
            get {
                return this.DeviceIdField;
            }
            set {
                if ((this.DeviceIdField.Equals(value) != true)) {
                    this.DeviceIdField = value;
                    this.RaisePropertyChanged("DeviceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceIp {
            get {
                return this.DeviceIpField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceIpField, value) != true)) {
                    this.DeviceIpField = value;
                    this.RaisePropertyChanged("DeviceIp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceName {
            get {
                return this.DeviceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceNameField, value) != true)) {
                    this.DeviceNameField = value;
                    this.RaisePropertyChanged("DeviceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceTime {
            get {
                return this.DeviceTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceTimeField, value) != true)) {
                    this.DeviceTimeField = value;
                    this.RaisePropertyChanged("DeviceTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountDTO", Namespace="http://schemas.datacontract.org/2004/07/MessangerDTO")]
    [System.SerializableAttribute()]
    public partial class AccountDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Img {
            get {
                return this.ImgField;
            }
            set {
                if ((object.ReferenceEquals(this.ImgField, value) != true)) {
                    this.ImgField = value;
                    this.RaisePropertyChanged("Img");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegistrationDTO", Namespace="http://schemas.datacontract.org/2004/07/MessangerDTO")]
    [System.SerializableAttribute()]
    public partial class RegistrationDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RepeatPasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RepeatPassword {
            get {
                return this.RepeatPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.RepeatPasswordField, value) != true)) {
                    this.RepeatPasswordField = value;
                    this.RaisePropertyChanged("RepeatPassword");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChangeDTO", Namespace="http://schemas.datacontract.org/2004/07/MessangerDTO")]
    [System.SerializableAttribute()]
    public partial class ChangeDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OldPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RepeatPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Img {
            get {
                return this.ImgField;
            }
            set {
                if ((object.ReferenceEquals(this.ImgField, value) != true)) {
                    this.ImgField = value;
                    this.RaisePropertyChanged("Img");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewPassword {
            get {
                return this.NewPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.NewPasswordField, value) != true)) {
                    this.NewPasswordField = value;
                    this.RaisePropertyChanged("NewPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OldPassword {
            get {
                return this.OldPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.OldPasswordField, value) != true)) {
                    this.OldPasswordField = value;
                    this.RaisePropertyChanged("OldPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RepeatPassword {
            get {
                return this.RepeatPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.RepeatPasswordField, value) != true)) {
                    this.RepeatPasswordField = value;
                    this.RaisePropertyChanged("RepeatPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChatDTO", Namespace="http://schemas.datacontract.org/2004/07/MessangerDTO")]
    [System.SerializableAttribute()]
    public partial class ChatDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Img {
            get {
                return this.ImgField;
            }
            set {
                if ((object.ReferenceEquals(this.ImgField, value) != true)) {
                    this.ImgField = value;
                    this.RaisePropertyChanged("Img");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GroupChatDTO", Namespace="http://schemas.datacontract.org/2004/07/MessangerDTO")]
    [System.SerializableAttribute()]
    public partial class GroupChatDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ChatAdminIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ChatAdminId {
            get {
                return this.ChatAdminIdField;
            }
            set {
                if ((this.ChatAdminIdField.Equals(value) != true)) {
                    this.ChatAdminIdField = value;
                    this.RaisePropertyChanged("ChatAdminId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Img {
            get {
                return this.ImgField;
            }
            set {
                if ((object.ReferenceEquals(this.ImgField, value) != true)) {
                    this.ImgField = value;
                    this.RaisePropertyChanged("Img");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageDTO", Namespace="http://schemas.datacontract.org/2004/07/MessangerDTO")]
    [System.SerializableAttribute()]
    public partial class MessageDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Img {
            get {
                return this.ImgField;
            }
            set {
                if ((object.ReferenceEquals(this.ImgField, value) != true)) {
                    this.ImgField = value;
                    this.RaisePropertyChanged("Img");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Time {
            get {
                return this.TimeField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeField, value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MessangerService.IMessangerService")]
    public interface IMessangerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessangerService/CheckUser", ReplyAction="http://tempuri.org/IMessangerService/CheckUserResponse")]
        Messenger.MessangerService.AccountDTO CheckUser(Messenger.MessangerService.LoginDTO login, Messenger.MessangerService.DeviceDTO deviceDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessangerService/CheckUser", ReplyAction="http://tempuri.org/IMessangerService/CheckUserResponse")]
        System.Threading.Tasks.Task<Messenger.MessangerService.AccountDTO> CheckUserAsync(Messenger.MessangerService.LoginDTO login, Messenger.MessangerService.DeviceDTO deviceDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessangerService/GetRegistration", ReplyAction="http://tempuri.org/IMessangerService/GetRegistrationResponse")]
        bool GetRegistration(Messenger.MessangerService.RegistrationDTO registrationDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessangerService/GetRegistration", ReplyAction="http://tempuri.org/IMessangerService/GetRegistrationResponse")]
        System.Threading.Tasks.Task<bool> GetRegistrationAsync(Messenger.MessangerService.RegistrationDTO registrationDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessangerService/GetDevicesByToken", ReplyAction="http://tempuri.org/IMessangerService/GetDevicesByTokenResponse")]
        Messenger.MessangerService.DeviceDTO[] GetDevicesByToken(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessangerService/GetDevicesByToken", ReplyAction="http://tempuri.org/IMessangerService/GetDevicesByTokenResponse")]
        System.Threading.Tasks.Task<Messenger.MessangerService.DeviceDTO[]> GetDevicesByTokenAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessangerService/ChangeAccount", ReplyAction="http://tempuri.org/IMessangerService/ChangeAccountResponse")]
        bool ChangeAccount(Messenger.MessangerService.ChangeDTO changeDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessangerService/ChangeAccount", ReplyAction="http://tempuri.org/IMessangerService/ChangeAccountResponse")]
        System.Threading.Tasks.Task<bool> ChangeAccountAsync(Messenger.MessangerService.ChangeDTO changeDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessangerService/GetChats", ReplyAction="http://tempuri.org/IMessangerService/GetChatsResponse")]
        Messenger.MessangerService.ChatDTO[] GetChats(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessangerService/GetChats", ReplyAction="http://tempuri.org/IMessangerService/GetChatsResponse")]
        System.Threading.Tasks.Task<Messenger.MessangerService.ChatDTO[]> GetChatsAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessangerService/GetOrCreateChat", ReplyAction="http://tempuri.org/IMessangerService/GetOrCreateChatResponse")]
        Messenger.MessangerService.ChatDTO GetOrCreateChat(Messenger.MessangerService.AccountDTO accountDTO, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessangerService/GetOrCreateChat", ReplyAction="http://tempuri.org/IMessangerService/GetOrCreateChatResponse")]
        System.Threading.Tasks.Task<Messenger.MessangerService.ChatDTO> GetOrCreateChatAsync(Messenger.MessangerService.AccountDTO accountDTO, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessangerService/GetGroupChat", ReplyAction="http://tempuri.org/IMessangerService/GetGroupChatResponse")]
        Messenger.MessangerService.GroupChatDTO[] GetGroupChat(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessangerService/GetGroupChat", ReplyAction="http://tempuri.org/IMessangerService/GetGroupChatResponse")]
        System.Threading.Tasks.Task<Messenger.MessangerService.GroupChatDTO[]> GetGroupChatAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessangerService/GetMessages", ReplyAction="http://tempuri.org/IMessangerService/GetMessagesResponse")]
        Messenger.MessangerService.MessageDTO[] GetMessages(Messenger.MessangerService.ChatDTO chatDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessangerService/GetMessages", ReplyAction="http://tempuri.org/IMessangerService/GetMessagesResponse")]
        System.Threading.Tasks.Task<Messenger.MessangerService.MessageDTO[]> GetMessagesAsync(Messenger.MessangerService.ChatDTO chatDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessangerService/SendMessage", ReplyAction="http://tempuri.org/IMessangerService/SendMessageResponse")]
        bool SendMessage(Messenger.MessangerService.ChatDTO chatDTO, string token, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessangerService/SendMessage", ReplyAction="http://tempuri.org/IMessangerService/SendMessageResponse")]
        System.Threading.Tasks.Task<bool> SendMessageAsync(Messenger.MessangerService.ChatDTO chatDTO, string token, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessangerService/GetAccountsByTeg", ReplyAction="http://tempuri.org/IMessangerService/GetAccountsByTegResponse")]
        Messenger.MessangerService.AccountDTO[] GetAccountsByTeg(string teg, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessangerService/GetAccountsByTeg", ReplyAction="http://tempuri.org/IMessangerService/GetAccountsByTegResponse")]
        System.Threading.Tasks.Task<Messenger.MessangerService.AccountDTO[]> GetAccountsByTegAsync(string teg, string token);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMessangerServiceChannel : Messenger.MessangerService.IMessangerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MessangerServiceClient : System.ServiceModel.ClientBase<Messenger.MessangerService.IMessangerService>, Messenger.MessangerService.IMessangerService {
        
        public MessangerServiceClient() {
        }
        
        public MessangerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MessangerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MessangerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MessangerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Messenger.MessangerService.AccountDTO CheckUser(Messenger.MessangerService.LoginDTO login, Messenger.MessangerService.DeviceDTO deviceDTO) {
            return base.Channel.CheckUser(login, deviceDTO);
        }
        
        public System.Threading.Tasks.Task<Messenger.MessangerService.AccountDTO> CheckUserAsync(Messenger.MessangerService.LoginDTO login, Messenger.MessangerService.DeviceDTO deviceDTO) {
            return base.Channel.CheckUserAsync(login, deviceDTO);
        }
        
        public bool GetRegistration(Messenger.MessangerService.RegistrationDTO registrationDTO) {
            return base.Channel.GetRegistration(registrationDTO);
        }
        
        public System.Threading.Tasks.Task<bool> GetRegistrationAsync(Messenger.MessangerService.RegistrationDTO registrationDTO) {
            return base.Channel.GetRegistrationAsync(registrationDTO);
        }
        
        public Messenger.MessangerService.DeviceDTO[] GetDevicesByToken(string token) {
            return base.Channel.GetDevicesByToken(token);
        }
        
        public System.Threading.Tasks.Task<Messenger.MessangerService.DeviceDTO[]> GetDevicesByTokenAsync(string token) {
            return base.Channel.GetDevicesByTokenAsync(token);
        }
        
        public bool ChangeAccount(Messenger.MessangerService.ChangeDTO changeDTO) {
            return base.Channel.ChangeAccount(changeDTO);
        }
        
        public System.Threading.Tasks.Task<bool> ChangeAccountAsync(Messenger.MessangerService.ChangeDTO changeDTO) {
            return base.Channel.ChangeAccountAsync(changeDTO);
        }
        
        public Messenger.MessangerService.ChatDTO[] GetChats(string token) {
            return base.Channel.GetChats(token);
        }
        
        public System.Threading.Tasks.Task<Messenger.MessangerService.ChatDTO[]> GetChatsAsync(string token) {
            return base.Channel.GetChatsAsync(token);
        }
        
        public Messenger.MessangerService.ChatDTO GetOrCreateChat(Messenger.MessangerService.AccountDTO accountDTO, string token) {
            return base.Channel.GetOrCreateChat(accountDTO, token);
        }
        
        public System.Threading.Tasks.Task<Messenger.MessangerService.ChatDTO> GetOrCreateChatAsync(Messenger.MessangerService.AccountDTO accountDTO, string token) {
            return base.Channel.GetOrCreateChatAsync(accountDTO, token);
        }
        
        public Messenger.MessangerService.GroupChatDTO[] GetGroupChat(string token) {
            return base.Channel.GetGroupChat(token);
        }
        
        public System.Threading.Tasks.Task<Messenger.MessangerService.GroupChatDTO[]> GetGroupChatAsync(string token) {
            return base.Channel.GetGroupChatAsync(token);
        }
        
        public Messenger.MessangerService.MessageDTO[] GetMessages(Messenger.MessangerService.ChatDTO chatDTO) {
            return base.Channel.GetMessages(chatDTO);
        }
        
        public System.Threading.Tasks.Task<Messenger.MessangerService.MessageDTO[]> GetMessagesAsync(Messenger.MessangerService.ChatDTO chatDTO) {
            return base.Channel.GetMessagesAsync(chatDTO);
        }
        
        public bool SendMessage(Messenger.MessangerService.ChatDTO chatDTO, string token, string message) {
            return base.Channel.SendMessage(chatDTO, token, message);
        }
        
        public System.Threading.Tasks.Task<bool> SendMessageAsync(Messenger.MessangerService.ChatDTO chatDTO, string token, string message) {
            return base.Channel.SendMessageAsync(chatDTO, token, message);
        }
        
        public Messenger.MessangerService.AccountDTO[] GetAccountsByTeg(string teg, string token) {
            return base.Channel.GetAccountsByTeg(teg, token);
        }
        
        public System.Threading.Tasks.Task<Messenger.MessangerService.AccountDTO[]> GetAccountsByTegAsync(string teg, string token) {
            return base.Channel.GetAccountsByTegAsync(teg, token);
        }
    }
}
